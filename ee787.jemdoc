# jemdoc: menu{MENU}{ee787.html}, notime
= EE787: Machine Learning 
[http://jonghank.khu.ac.kr Prof. Jong-Han Kim], [http://www.khu.ac.kr Kyung Hee University], Autumn 2019 

~~~
== Announcements
- No class on 12\/10 and 12\/12, and make-up sessions on 12\/20, 12\/24, 12\/26, and 12\/27, at 10:30am-12:00pm in Electronics and Information Bldg. Rm.539.
- No class on 10\/29.
- Homework \#2 was posted.
- Homework \#1 was posted.
- Welcome to EE787: Machine learning.
~~~

== Course Info.

*Course descriptions* 
- Fundamental concepts and theories in machine learning, supervised and unsupervised learning, regression and classification, loss function selection and its effect on learning, regularization and robustness to outliers, numerical experiments on data from a wide variety of engineering and other disciplines.

*Lectures* 
- Tue\/Thr 13:30-14:45 (Multimedia bldg. Rm.210)

*Office hours*
- Tue\/Thr 15:00-16:00 (Rm.516), or by appointments if you cannot meet them.

*Prerequisites* 
- Previous exposure to linear algebra, probability, and programming.
- Working knowledge on optimization will be a plus.

*Reference textbooks* \n
- There are no required textbooks.
- [http://vmls-book.org Introduction to applied linear algebra - vectors, matrices, and least squares]
by Boyd and Vandenberghe will be a useful reference.

*Grading policy*
- No exams.
- Students will be evaluated by their homework assignments.

== Lecture notes
/The course material is reproduced from the [http://ee104.stanford.edu EE104: Introduction to machine learning] by [http://lall.stanford.edu Sanjay Lall] and [http://web.stanford.edu/~boyd/ Stephen Boyd] at Stanford university, under their kind permission./

. [./ee787/2019a/overview.pdf Course overview]
. [./ee787/2019a/supervised.pdf Supervised learning via empirical risk minimization]
. [./ee787/2019a/regression.pdf Least squares linear regression]
. [./ee787/2019a/validation.pdf Validation]
. [./ee787/2019a/features.pdf Features]
. [./ee787/2019a/regularization.pdf Regularization]
. [./ee787/2019a/example.pdf House prices example]
. [./ee787/2019a/losses.pdf Non-quadratic losses]
. [./ee787/2019a/regularizers.pdf Non-quadratic regularizers]
. [./ee787/2019a/optimization.pdf Optimization]
. [./ee787/2019a/prox_gradient.pdf Prox-gradient method]
. [./ee787/2019a/boolean_classification.pdf Boolean classification]
. [./ee787/2019a/multiclass.pdf Multi-class classification]
. [./ee787/2019a/neural.pdf Neural networks]
. Unsupervised learning
. Principal component analysis

== Assignments

/Several sets of occasional homeworks will be assigned. 
You are encouraged to work in groups, however everyone should turn in his\/her own work.
Some of these assignments are from [http://vmls-book.org Introduction to applied linear algebra - vectors, matrices, and least squares]./

. [./ee787/2019a/homeworks/hw1.pdf Homework \#1] (due 10/22)
. [./ee787/2019a/homeworks/hw2.pdf Homework \#2] (due 11/7)

#. [./ee787/ee787_hw1.pdf Homework 1] (due 10/4): [./ee787/files/nearest_neighbor_data.json nearest_neighbor_data.json], [./ee787/files/fitting_outliers.json fitting_outliers.json], [./ee787/files/all_pairs_data.json all_pairs_data.json]
#. [./ee787/ee787_hw2.pdf Homework 2] (due 10/18): [./ee787/files/inductor_data.json inductor_data.json], [./ee787/files/rational_fit_data.json rational_fit_data.json], [./ee787/files/prostate_cancer_data.json prostate_cancer_data.json], [./ee787/files/to_one_hot.jl to_one_hot.jl]
#. [./ee787/ee787_hw3.pdf Homework 3] (due 11/15): [./ee787/files/power_demand_data.json power_demand_data.json]
#. [./ee787/ee787_hw4.pdf Homework 4] (due 11/27): [./ee787/files/tomodata_fullysampled.json tomodata_fullysampled.json], [./ee787/files/tomodata_undersampled.json tomodata_undersampled.json], [./ee787/files/line_pixel_length.jl line_pixel_length.jl], [./ee787/files/TV_inpainting.ipynb TV_inpainting.ipynb]
#. [./ee787/ee787_hw5.pdf Homework 5] (optional): [./ee787/files/homework_scores.csv homework_scores.csv]

== Julia

*Julia language*
- We will be using Julia, which excels in high performance technical computing, for homework assignments.
- You are not expected to have a strong background in programming (with Julia or otherwise), because the program you will write will use only a tiny subset of Julia's (many and powerful) features.

*Reference webpages*
- [http://julialang.org The official Julia webpage]
- [http://juliabox.com JuliaBox: an easy-to-use online platform of Julia]
- [http://juliacomputing.com A variety of Julia product packages including JuliaPro]
- [http://vmls-book.stanford.edu Julia language companion: an excellent source of Julia codes written in Julia]

== Files

/These are some data and the Julia codes in .ipynb notebook files that we are using for lectures or homework assignments./

. [./ee787/2019a/files/straight_line_fit_in_julia.html Straight line fit in julia] 
 ([./ee787/2019a/files/straight_line_fit_in_julia.ipynb .ipynb])
. [./ee787/2019a/files/straight_line_fit_in_python.html Straight line fit in python] 
 ([./ee787/2019a/files/straight_line_fit_in_python.ipynb .ipynb])
. [./ee787/2019a/files/diabetes.html Diabetes example] ([./ee787/2019a/files/diabetes.ipynb .ipynb])
. [./ee787/2019a/files/diabetes_split.html Splitting dataset] ([./ee787/2019a/files/diabetes_split.ipynb .ipynb])
. [./ee787/2019a/files/polynomial_fit.html Polynomial fit] ([./ee787/2019a/files/polynomial_fit.ipynb .ipynb])
. [./ee787/2019a/files/sequential_outlier_detection.html Reading +json+ files from webpages] ([./ee787/2019a/files/sequential_outlier_detection.ipynb .ipynb])
. [./ee787/2019a/files/house_price_example.html House price example] ([./ee787/2019a/files/house_price_example.ipynb .ipynb], [./ee787/2019a/files/train.csv train.csv], [./ee787/2019a/files/data_description.txt data\_description.txt]  ), 
. [./ee787/2019a/files/tomography.html Tomography] ([./ee787/2019a/files/tomography.ipynb .ipynb], [./ee787/2019a/files/line_pixel_length.jl line\_pixel\_length.jl], [./ee787/2019a/files/tomodata_fullysampled.json tomodata\_fullysampled.json], [./ee787/2019a/files/tomodata_undersampled.json tomodata\_undersampled.json])
. [./ee787/files/piecewise_linear_fit.html Piecewise-linear fit] ([./ee787/files/piecewise_linear_fit.ipynb .ipynb])
. [./ee787/files/Convex_jl_tutorial.html +Convex.jl+ tutorial] ([./ee787/files/Convex_jl_tutorial.ipynb .ipynb])
. [./ee787/files/binary_classifiers.html Binary classifiers] ([./ee787/files/Binary_classifiers.ipynb .ipynb])


#To run .ipynb files, first download the code by right-clicking “code” and clicking “Save #link as…”. 
#Then, upload the file to JuliaBox with the “upload” button under the “Jupyter” tab./

#. Julia example: [./ee787/files/khu_logo_compression.html KHU logo was a guitar pick.] ([./ee787/files/khulogo.jpg khulogo.jpg], [./ee787/files/khu_logo_compression.ipynb khu_logo_compression.ipynb])
#. Julia example: [./ee787/files/huber-based_dynamical_system_estimation.html Huber-based dynamical system estimation.] ([./ee787/files/huber-based_dynamical_system_estimation.ipynb huber-based_dynamical_system_estimation.ipynb])
#. [./ee787/files/diabetes.html JHK is safe from diabetes.] ([./ee787/files/diabetes.data diabetes.data], [./ee787/files/diabetes.ipynb diabetes.ipynb])
#. [./ee787/files/polynomial_fit.html Polynomial fit.] ([./ee787/files/polynomial_fit.ipynb polynomial_fit.ipynb])
#. [./ee787/files/monomial-exponential_fit.html Monomial-exponential fit.] ([./ee787/files/monomial-exponential_fit.ipynb monomial-exponential_fit.ipynb])
#. [./ee787/files/readclassjson_example.html .json file read example.] ([./ee787/files/readclassjson.jl readclassjson.jl])
#. [./ee787/files/Different_norms.html Different norms.] ([./ee787/files/Different_norms.ipynb Different_norms.ipynb])
#. [./ee787/files/Sound_signal_recovery.html Sound signal recovery.] ([./ee787/files/Sound_signal_recovery.ipynb Sound_signal_recovery.ipynb])
#. [./ee787/files/TV_inpainting.html TV_inpainting.] ([./ee787/files/neo_bw.png neo_bw.png], [./ee787/files/neo_bw_corrupted.png neo_bw_corrupted.png], [./ee787/files/corrupted_image.json corrupted_image.json], [./ee787/files/TV_inpainting.ipynb TV_inpainting.ipynb])
#. [./ee787/files/Network_topology.html Network topology identification.] ([./ee787/files/Network_topology.ipynb Network_topology.ipynb])
#. [./ee787/files/ls_lr_svm.html Least squares classifier, logistic regression, and support vector machine.] ([./ee787/files/ls_lr_svm.ipynb ls_lr_svm.ipynb])
#. [./ee787/files/iris.html Iris classification.] ([./ee787/files/iris.csv iris.csv], [./ee787/files/iris.ipynb iris.ipynb])
#. [./ee787/files/handwriting.html Handwriting image classification.] ([./ee787/files/mnist_train.csv mnist_train.csv], [./ee787/files/mnist_test.csv mnist_test.csv], [./ee787/files/handwriting.ipynb handwriting.ipynb])

